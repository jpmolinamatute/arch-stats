from uuid import UUID

from pydantic import BaseModel, Field


class ArrowCreate(BaseModel):
    arrow_id: UUID = Field(
        ...,
        alias="id",
        description="A Universally Unique Identifier generated by the system",
    )
    human_identifier: str = Field(
        ...,
        max_length=10,
        description="Short unique identifier easy to remember",
        examples=["A1", "B", "3", "etc"],
    )
    length: float = Field(
        ...,
        description="Arrow's total length in cm",
        examples=[75.0],
    )
    is_programmed: bool = Field(
        ...,
        description="Whether the arrow has been programmed with a UUID",
    )
    weight: float | None = Field(
        None,
        description="Arrow's weight in grams",
        examples=[20.5],
    )
    diameter: float | None = Field(
        None,
        description="Diameter of the arrow in mm",
        examples=[6.2],
    )
    spine: float | None = Field(
        None,
        description="Arrow spine (flexibility rating)",
        examples=[500],
    )
    label_position: float | None = Field(
        None,
        description="Position of label from nock in cm",
        examples=[10.0],
    )


class ArrowUpdate(BaseModel):
    is_programmed: bool | None = Field(
        None,
        description="Whether the arrow has been programmed with a UUID",
    )
    human_identifier: str | None = Field(
        None,
        max_length=10,
        description="Short unique identifier easy to remember",
        examples=["A1", "B", "3", "etc"],
    )
    length: float | None = Field(
        None,
        description="Arrow's total length in cm",
        examples=[75.0],
    )
    weight: float | None = Field(
        None,
        description="Arrow's weight in grams",
        examples=[20.5],
    )
    diameter: float | None = Field(
        None,
        description="Diameter of the arrow in mm",
        examples=[6.2],
    )
    spine: float | None = Field(
        None,
        description="Arrow spine (flexibility rating)",
        examples=[500],
    )
    label_position: float | None = Field(
        None,
        description="Position of label from nock in cm",
        examples=[10.0],
    )


class ArrowRead(BaseModel):
    arrow_id: UUID = Field(
        ...,
        alias="id",
        description="A Universally Unique Identifier generated by the system",
    )
    is_programmed: bool = Field(
        ...,
        description="Whether the arrow has been programmed with a UUID",
    )
    human_identifier: str = Field(
        ...,
        max_length=10,
        description="Short unique identifier easy to remember",
        examples=["A1", "B", "3", "etc"],
    )
    length: float = Field(
        ...,
        description="Arrow's total length in cm",
        examples=[75.0],
    )
    weight: float | None = Field(
        None,
        description="Arrow's weight in grams",
        examples=[20.5],
    )
    diameter: float | None = Field(
        None,
        description="Diameter of the arrow in mm",
        examples=[6.2],
    )
    spine: float | None = Field(
        None,
        description="Arrow spine (flexibility rating)",
        examples=[500],
    )
    label_position: float | None = Field(
        None,
        description="Position of label from nock in cm",
        examples=[10.0],
    )

    class Config:
        allow_population_by_field_name = True  # Still useful!
        populate_by_name = True
