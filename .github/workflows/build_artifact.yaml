name: Build Artifact
on:
  push:
    # branches:
    #   - main

permissions:
  contents: write

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17.2
        env:
          POSTGRES_USER: "admin"
          POSTGRES_PASSWORD: "NOT_A_REAL_PASSWORD"
          POSTGRES_DB: "arch-stats"
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U admin"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set uv & Install Dependencies
        uses: ./.github/actions/uv-setup
      - name: Setup Node & Install Dependencies
        uses: ./.github/actions/npm-setup
      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
      - name: Wait for Postgres to be ready
        run: |
          for i in {1..30}; do
            if (echo > /dev/tcp/127.0.0.1/5432) >/dev/null 2>&1; then
              echo "Postgres is accepting TCP connections"
              break
            fi
            echo "Waiting for Postgres (attempt $i)..."
            sleep 2
          done
      - name: Generate OpenAPI Spec
        working-directory: ./backend/src
        env:
          POSTGRES_USER: "admin"
          POSTGRES_PASSWORD: "NOT_A_REAL_PASSWORD"
          POSTGRES_DB: "arch-stats"
          POSTGRES_HOST: "127.0.0.1"
          POSTGRES_PORT: "5432"
          ARCH_STATS_DEV_MODE: "true"
          ARCH_STATS_SERVER_PORT: "8000"
          ARCH_STATS_WS_CHANNEL: "archy"
          PYTHONPATH: "${{ github.workspace }}/backend/src"
        run: |
          source "${GITHUB_WORKSPACE}/backend/.venv/bin/activate"
          uv run "${GITHUB_WORKSPACE}/scripts/generate_openapi.py"
      - name: Generate TypeScript types
        working-directory: ./frontend
        run: npx openapi-typescript "${GITHUB_WORKSPACE}/openapi.json" --export-type --immutable --output "${GITHUB_WORKSPACE}/frontend/src/types/types.generated.ts"
      - name: Build FE bundle
        working-directory: ./frontend
        run: npm run build
      - name: Build tar file
        env:
          XZ_OPT: -9
        run: tar -cvJf "${GITHUB_WORKSPACE}/arch-stats.tar.xz" --exclude='backend/tests' --exclude='backend/.venv' --exclude='backend/.mypy_cache' --exclude='*/__pycache__' ./backend
      - name: Upload to release (overwrite)
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: Latest Build
          files: ${{ github.workspace}}/arch-stats.tar.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
